%{ 	 
#include <math.h> 
#include <stdio.h>
#include <stdlib.h>
%} 

%option noyywrap


DIGIT 		[0-9]
CONSTANT_STRING		\"[a-zA-Z0-9]*\"
CONSTANT_NUMBER		0|[+|-]?[1-9][0-9]*([.][0-9]*)?|[+|-]?0[.][0-9]* 
CONSTANT_CHARACTER 	\'[a-zA-Z0-9]\'
IDENTIFIER	[a-zA-Z][a-zA-Z0-9]*

%%

read        printf( "Reserved word: %s\n", yytext);
print	    printf( "Reserved word: %s\n", yytext);
if	        printf( "Reserved word: %s\n", yytext);
else	    printf( "Reserved word: %s\n", yytext);
while	    printf( "Reserved word: %s\n", yytext);
int	    printf( "Reserved word: %s\n", yytext);
string	    printf( "Reserved word: %s\n", yytext);
char   printf( "Reserved word: %s\n", yytext);
unsigned	    printf( "Reserved word: %s\n", yytext);
float	    printf( "Reserved word: %s\n", yytext);


{IDENTIFIER}	printf( "Identifier: %s\n", yytext);

{CONSTANT_NUMBER} 	{printf( "A number: %s (%d)\n", yytext, atof( yytext ) ); }

{CONSTANT_STRING}		{printf("A string: %s\n", yytext);}

{CONSTANT_CHARACTER}	{printf("A character: %s\n", yytext);}


"+"|"-"|"*"|"/"|"%"|"="|"=="|"!="|"<"|">"|"<="|">=" {printf( "An operator: %s\n", yytext ); }

"("|")"|";"|"{"|"}" {printf("A separator: %s\n", yytext );}

[ \t]+ 
[\n]+ 
		 
[+-]?0[0-9]*                    printf("Illegal integer at line\n");
[0-9]+[a-zA-Z_]+[a-zA-Z0-9_]*   printf("Illegal identifier\n");
\'[a-zA-Z0-9]{2,}\'             printf("Character of length >=2 at line\n");
.                               printf("Lexical error\n");
%% 

int main( argc, argv ) 
int argc; 
char **argv; 
{ 
    ++argv, --argc; /* skip over program name */ 
	printf("Argc: %d\n", argc);
     printf("Argv[0]: %s\n", argv[0]);
    
    yyin = fopen( argv[0], "r" ); 
    if (!yyin)
    {
        fprintf(stderr, "Could not open %s\n", argv[0]);
        
    }
    yylex(); 
} 